800-181.60
5588.96 + 3269
library(rvest)
library(dplyr)
library(stringr)
library(ggplot2)
library(lubridate)
pagelist <- c(
paste("https://en.wikipedia.org/wiki/Members_of_the_1st_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_2nd_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_3rd_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_", 4:20 ,"th_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_21st_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_22nd_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_23rd_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_", 24:30 ,"th_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_31st_D%C3%A1il", sep=""),
paste("https://en.wikipedia.org/wiki/Members_of_the_32nd_D%C3%A1il", sep=""))
#/html/body/div[3]/div[3]/div[4]/div/table[3]
election <- pagelist[1] %>%
read_html() %>%
html_nodes(xpath='/html/body/div[3]/div[3]/div[4]/div/table[4]') %>%
html_table(fill=T)%>%
unlist(recursive=F) %>%
as.data.frame()
election <- election[-1,c(1,2,4)]
colnames(election) <- c("constituency", "name", "party")
#group
election$dailno <- 1
allelections <- election
for (i in 2:28){
election <- pagelist[i] %>%
read_html() %>%
html_nodes(xpath='/html/body/div[3]/div[3]/div[4]/div/table[3]') %>%
html_table(fill=T)%>%
unlist(recursive=F) %>%
as.data.frame()
election <- election[-1,c(1,2,4)]
colnames(election) <- c("constituency", "name", "party")
election$dailno <- i
allelections <- rbind(allelections, election)
}
for (i in 29:31){
election <- pagelist[i] %>%
read_html() %>%
html_nodes(xpath='/html/body/div[3]/div[3]/div[4]/div/table[3]') %>%
html_table(fill=T)%>%
unlist(recursive=F) %>%
as.data.frame()
election <- election[,c(3,4,2)]
colnames(election) <- c("name","constituency",  "party")
#  election <- election[,c(2,3,1)]
election$dailno <- i
allelections <- rbind(allelections, election)
}
election <- pagelist[32] %>%
read_html() %>%
html_nodes(xpath='/html/body/div[3]/div[3]/div[4]/div/table[4]') %>%
html_table(fill=T)%>%
unlist(recursive=F) %>%
as.data.frame()
election <- election[,c(3,4,2)]
colnames(election) <- c("name","constituency",  "party")
#  election <- election[,c(2,3,1)]
election$dailno <- 32
allelections <- rbind(allelections, election)
#allelections <- allelections2
allelections$name <- allelections$name %>%
str_remove("\\?\\?\\?") %>%
str_remove("\\[.*") %>%
str_remove("†")
allelections$party <- allelections$party %>%
str_remove("\\(\\d.*") %>%
str_trim()
allelections$party[allelections$dailno > 25& allelections$party == "Sinn Féin"] <- "Provisional Sinn Féin"
eldates <- data.frame(dailno=1:32, date= dmy(
c("21-01-1919", "16-08-1921", "09-09-1922", "19-09-1923", "23-06-1927", "11-10-1927", "09-03-1932", "08-02-1933", "21-07-1937", "30-06-1938", "01-07-1943", "09-06-1944", "18-02-1948", "13-06-1951", "02-06-1954", "20-03-1957", "11-10-1961", "21-04-1965", "02-07-1969", "14-03-1973", "05-07-1977", "30-06-1981", "09-03-1982", "14-12-1982", "10-03-1987", "29-06-1989", "14-12-1992", "26-06-1997", "06-06-2002", "14-06-2007", "09-03-2011", "10-03-2016")),
endate= dmy(
c("10-05-1921", "08-06-1922", "09-08-1923", "20-05-1927", "16-08-1927", "17-12-1931", "22-12-1932", "14-06-1937", "25-05-1938", "26-06-1943", "10-05-1944", "11-12-1947", "02-05-1951", "23-04-1954", "13-12-1956", "01-09-1961", "11-03-1965", "21-05-1969", "05-02-1973", "25-05-1977", "21-05-1981", "27-01-1982", "04-11-1982", "20-01-1987", "25-05-1989", "05-11-1992", "15-05-1997", "25-04-2002", "26-04-2007", "01-02-2011", "03-02-2016", "17-03-2018")
))
eldates$duration <- difftime( eldates$endate, eldates$date)
eldates$middate <- (eldates$date + eldates$duration/2)
#eldates$gov <-
allelections <- left_join(allelections, eldates, by="dailno")
parties <- unique(allelections$party)
partygp <-c("Sinn Féin", "Sinn Féin (Pro-Treaty) - Cumann na nGaedheal - Fine Gael", "Labour Party", "Farmers' Party", "Sinn Féin (Anti-Treaty) - Fianna Fáil", "Other", "Independent" ,"Sinn Féin (Pro-Treaty) - Cumann na nGaedheal - Fine Gael","Sinn Féin (Anti-Treaty) - Fianna Fáil","Sinn Féin (Anti-Treaty) - Fianna Fáil" , "Other", "Other", "Other" ,"Other",   "Sinn Féin (Pro-Treaty) - Cumann na nGaedheal - Fine Gael", "Clann na Talmhan","Other", "Clann na Poblachta","Sinn Féin - Provisional Sinn Féin - Sinn Féin","Other", "Other", "Other","Other", "Sinn Féin - The Workers' Party - Workers' Party" ,"Other" ,
"Progressive Democrats","Green Party","Other", "(Provisional) Sinn Féin" ,               "Socialist Party - People Before Profit Alliance - AAA-PBP" ,   "Socialist Party - People Before Profit Alliance - AAA-PBP" ,"Socialist Party - People Before Profit Alliance - AAA-PBP", "Socialist Party - People Before Profit Alliance - AAA-PBP","Other", "Other")
partygp2 <-c("Sinn Féin", "Sinn Féin (Pro-Treaty)", "Labour Party", "Farmers' Party", "Sinn Féin (Anti-Treaty)", "Other", "Independent" ,"Cumann na nGaedheal","Republican","Fianna Fáil" , "Other", "Other", "Other" ,"Other",   "Fine Gael", "Clann na Talmhan","Other", "Clann na Poblachta","Sinn Féin (modern)","Other", "Other", "Other", "Workers' Party" ,"Other" ,"Other","Progressive Democrats","Green Party","Other", "(Provisional) Sinn Féin" ,               "AAA-PBP" ,   "AAA-PBP"   ,"AAA-PBP","AAA-PBP", "Other", "Other")
pinf <- data.frame(party= unique(allelections$party), partygp, partygp2)
allelections <- left_join(allelections, pinf, by="party")
size<- allelections %>%
group_by(dailno) %>%
summarise(dailsize= n())
allelections <- left_join(allelections, size, by='dailno')
partyprop<- allelections %>%
group_by(dailno, date, endate, duration, middate, partygp,party) %>%
summarise( seatnum=n(), ) %>%
left_join( size, by='dailno') %>%
mutate(seatprop =100*seatnum/dailsize)
firstel <- allelections %>%
group_by(partygp2) %>%
summarise(firstel =min(dailno), firstdate=min(date))
firstel$ypos <- c(80, 85,82,96,60,87,15,60,98,92,80,-100,90,-100,55,-100,-100,-100,-100)
firstel <- left_join(firstel, pinf, by="partygp2")
allelections$reelected <- FALSE
for (i in 1:nrow(allelections)){
allelections$reelected[i] <- allelections$name[i] %in% allelections$name[allelections$dailno==allelections$dailno[i]+1]
}
allelections$reelected[i] <- allelections$name[i] %in% allelections$name[allelections$dailno==allelections$dailno[i]+1]
reelprop <- allelections %>%
group_by(dailno,reelected, date ) %>%
summarise(numre = n()) %>%
left_join(size, by='dailno') %>%
mutate(percre=100*numre/dailsize)
reelprop <-   subset(reelprop, reelprop$reelected == FALSE)
reelprop$useme <- reelprop$dailno != max(reelprop$dailno)
reelprop$usefig <- (reelprop$percre/5)-18
partyprop$partygp <- factor(partyprop$partygp, levels= levels(partyprop$partygp)[c(8,6, 15,1,2,3,4 ,5,9,12,11,7,14,13,10)])
size <- left_join(size, eldates, by="dailno")
size$unchange <- FALSE
for (i in 1:nrow(size)){
if (i > 1){
size$unchange[i] <- size$dailsize[i] == size$dailsize[i-1]
}
}
sizesm <- subset(size, size$unchange == FALSE)
impdates <- data.frame(desc = c("Anglo Irish \n treaty signed", "Current \nconstitution \nadopted", "Republic of\n Ireland Act", "EC \nAccession") ,date= dmy(c("06-12-1921", "29-12-1937", "18-04-1949", "01-01-1973")))
govdf <- 'https://en.wikipedia.org/wiki/Irish_heads_of_government_since_1919'%>%
read_html() %>%
html_nodes(xpath='/html/body/div[3]/div[3]/div[4]/div/table[2]') %>%
html_table(fill=T)%>%
unlist(recursive=F) %>%
as.data.frame()
govdf$Party <-  govdf$Party %>% str_remove( "\\[.*") %>% str_replace(" faction", "")
govdf$govstart <- dmy(govdf$Entered.Office)
govdf$govend <- dmy(govdf$Left.Office)
govdf$govend[nrow(govdf)] <- ymd("2018-03-17")
govdf$govend[nrow(govdf)] <- Sys.Date()
govdf <- govdf%>% merge(pinf, by.x=c("Party"), by.y=c("party"))
govdf$tsur <- word(govdf$Name, -1)
careers <- allelections %>%
group_by(name) %>%
summarise(first=min(dailno), last=max(dailno), tot=n()) %>%
mutate(length=last-first +1)
topcareers <- subset(careers, !careers$name %in% c("Tom Fitzpatrick", "Brian Lenihan", "John O'Leary" )) %>%
top_n(n=20, wt=tot)
topcareers$name <- factor(topcareers$name, levels=topcareers$name[order(topcareers$first)])
topcel <- inner_join(allelections, topcareers, by="name") %>%
filter((name=="Tom McEllistrim" & dailno>18)==F) %>%
filter((name=="Michael Kennedy" & dailno>20)==F)
topcel$name <- factor(topcel$name, levels=topcareers$name[order(topcareers$first)])
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","cornflower blue", "darkgoldenrod", "forest green", "light blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
geom_point()
#ggplot(topcel, aes(x=dailno, y=name, colour=party))+geom_point()
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","cornflower blue", "darkgoldenrod", "forest green", "light blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
careers <- allelections %>%
group_by(name) %>%
summarise(first=min(dailno), last=max(dailno), tot=n()) %>%
mutate(length=last-first +1)
topcareers <- subset(careers, !careers$name %in% c("Tom Fitzpatrick", "Brian Lenihan", "John O'Leary" , "Patrick Hogan")) %>%
top_n(n=20, wt=tot)
topcareers$name <- factor(topcareers$name, levels=topcareers$name[order(topcareers$first)])
topcel <- inner_join(allelections, topcareers, by="name") %>%
filter((name=="Tom McEllistrim" & dailno>18)==F) %>%
filter((name=="Michael Kennedy" & dailno>20)==F)
topcel$name <- factor(topcel$name, levels=topcareers$name[order(topcareers$first)])
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","cornflower blue", "darkgoldenrod", "forest green", "light blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
#ggplot(topcel, aes(x=dailno, y=name, colour=party))+geom_point()
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","cornflower blue", "forest green", "light blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","cyan", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green") )
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), title="Party" ) +
ylab("Name")+
xlab("Date")
scale_colour_manual()
?scale_colour_manual()
?ggtitle
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics", subtitle = "Data scraped from Wikipedia.org", label= "graphling.org")
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics")
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics"
, subtitle = "Data scraped from Wikipedia.org"), label= "graphling.org")
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics"
, subtitle = "Data scraped from Wikipedia.org", label= "graphling.org")
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics", subtitle = "Data scraped from Wikipedia.org", label= "graphling.org")
ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics")
(p=ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics")
)
ggsave("dailsummary.png", plot=p, device="png", height=7, width=11,dpi=300)
ggsave("longcareers.png", plot=p, device="png", height=7, width=11,dpi=300)
#main data:
p=ggplot(data=partyprop, aes(x=date, y=seatprop,fill=partygp))+
geom_bar(stat='identity', alpha=1, width=250)+
scale_fill_manual(values=c("white","grey","black","darkgreen",  "darkcyan", "darkgreen", "darkgoldenrod", "light green",  "blue", "red3", "darkgreen","red",  "cornflower blue", "forest green" , "darkgreen"))+
scale_alpha_manual(values=c(0,1))+
theme_minimal()+
xlab("Date")+
xlim(dmy("1919-01-21"),Sys.Date() )+
#chosen dates
geom_segment(inherit.aes=FALSE, data=impdates, aes(x=date, xend=date, y=-32, yend=100), linetype=2, alpha=0.75)+
geom_text(inherit.aes=FALSE, data=impdates, aes(x=date, y=-36, label=desc), angle=0, size=3)+
#party labels:
geom_label(inherit.aes=FALSE, data=firstel, aes(x=firstdate, y=ypos, label=partygp2, fill=partygp),colour="white", alpha=0.75)+
#dáil number:
geom_text(inherit.aes=FALSE, data=eldates, aes(x=date, y=105, label= dailno), size=2.8,angle=45, check_overlap = TRUE)+
#dail size
#  geom_point(inherit.aes=FALSE, data=sizesm, aes(x=date, y= -3) ,size=6, colour="darkgrey")+
geom_text(inherit.aes=FALSE, data=sizesm, aes(x=date, y= -3, label=dailsize) ,size=2.8,fill="white", colour="cadetblue4", angle=60)+
geom_hline(yintercept=0)+
#turnover
geom_line(inherit.aes=FALSE, data=reelprop, aes(x=date, y=usefig, alpha=useme))+
geom_text(aes(inherit.aes=FALSE,x=ymd("1919-01-21"), y=-6, label="60%"), size=2.2)+
#  geom_segment(aes(x=ymd("1921-01-21"),xend= ymd("2018-01-01"), y=-6, yend=-6), linetype=1, alpha=0.2)+
geom_text(aes(x=ymd("1919-01-21"), y=-14, label="20%"), size=2.2)+
geom_text(aes(x=ymd("1916-01-21"), y=-10, label="Turnover"), size=3.2, angle=90)+
#gov:
geom_text(aes(x=ymd("1916-01-21"), y=-29, label="Government"), size=3.2, angle=90)+
geom_rect(inherit.aes=FALSE,data=govdf,  aes(ymin=-23, ymax=-30, xmin= govstart, xmax=govend, fill=partygp), alpha=0.7)+
geom_segment(inherit.aes=FALSE,data=govdf,  aes(y=-23, yend=-30, x= govstart, xend=govstart),colour="black",alpha=0.7)+
scale_y_discrete(breaks=c(0,25,50,75,100), name="Dáil Seats")+
ylim(-37,105)+
ylab("     Dáil Seats (%)")+
#extra theming
theme(legend.position = 'none') +
theme(panel.grid.major.y = element_blank())+
theme(panel.grid.minor.y = element_blank())+
ggtitle("A Graphical History of Dáil Éireann")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("dailsummary.png", plot=p, device="png", height=7, width=11,dpi=300)
#ggsave(plot=p, height=7,width=11,dpi=200, filename=paste("maindail.pdf"), useDingbats=FALSE, limitsize = FALSE)
#  geom_text_repel(inherit.aes=FALSE,data=govdf,  aes(label=tsur, x=govstart, y=-32), angle=40, direction="y")
(p=ggplot(topcel, aes(x=date, y=name, colour=party))+
geom_segment(aes(x=date, xend=endate, y=name, yend=name), size=3.5)+
theme_minimal() +
scale_colour_manual(values=c("black","light blue", "forest green", "cornflower blue", "grey", "light green", "red3","red","green","darkgreen", "cyan", "green"), name="Party" ) +
ylab("Name")+
xlab("Date")+
ggtitle("The 20 longest Dáil careers in Irish politics")
)
ggsave("longcareers.png", plot=p, device="png", height=7, width=11,dpi=300)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
library(jsonlite)
library(stringr)
library(XML)
library(RCurl)
library(filesstrings)
library(ggplot2)
library(ggrepel)
library(tidyr)
library(rvest)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("[\\w\\s]+", "", p2)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^[\\w\\s]+", "", p2)
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^[\w\s]+", "", p2)
p2 <- sub("^[\\w\s]+", "", p2)
p2 <- sub("^[\\w\\s]+", "", p2)
p2 <- sub("^[\\w\\s]+\\\n\\s", "", p2)
p2 <- sub("^[\\w\\s]+\\\n\\s", "", p2)
p2 <- sub("^[\w\s]+\\n\s+", "", p2)
p2 <- sub("^[\\w\\s]+\\\n\\s+", "", p2)
p2 <- sub("[\\w\\s]+\\\n\\s+", "", p2)
strsplit(p2, "\n")[2]
strsplit(p2, "\\n")[2]
p2 <- sub("^[\\w\\s]+", "", p2)
p2
library(jsonlite)
library(stringr)
library(XML)
library(RCurl)
library(filesstrings)
library(ggplot2)
library(ggrepel)
library(tidyr)
library(rvest)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p3 <- sub("^[")
p3 <- sub("^[\\w\\s]", p2)
p3 <- sub("^[\\w\\s]", "", p2)
p3 <- sub("^A", "", p2)
p3 <- sub("^\w", "", p2)
p3 <- sub("^\\w", "", p2)
p3 <- sub("^\\w+", "", p2)
p3 <- sub("^\\w+\\s", "", p2)
p3 <- sub("^\\w+\\s\\w+", "", p2)
p3 <- sub("^\\w+\\s\\w*\\s*", "", p2)
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <- sub("\\s+\\\n.+", "", p2)
p2 <- sub("^\\w+\\s\\w*\\s*(", "", p2)
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- sub("\\s.*", "", p2)
deathdate <- sub("[\\w\\d\\s]+\\\n\\s-\\s", "", p2)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
library(jsonlite)
library(stringr)
library(XML)
library(RCurl)
library(filesstrings)
library(ggplot2)
library(ggrepel)
library(tidyr)
library(rvest)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <-  sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- as.numeric(sub("\\s.*", "", p2))
deathdate <- as.numeric(sub("\\d+\\s+\\\n\\s+-\\s+", "", p2))
pgdf <- data.frame(surname, firstname, birthdate, deathdate)
View(pgdf)
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <-  sub("<.+", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- as.numeric(sub("\\s.*", "", p2))
deathdate <- as.numeric(sub("\\d+\\s+\\\n\\s+-\\s+", "", p2))
pgdf <- data.frame(surname, firstname, birthdate, deathdate)
View(pgdf)
sub("<.+", "", firstname)
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <-  sub("<.+", "", sub("\\s+\\\n.+", "", p2))
firstname <- sub("<.+", "", firstname)
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- as.numeric(sub("\\s.*", "", p2))
deathdate <- as.numeric(sub("\\d+\\s+\\\n\\s+-\\s+", "", p2))
pgdf <- data.frame(surname, firstname, birthdate, deathdate)
View(pgdf)
firstname
p <- "https://musicalics.com/en/composers_alphabet" %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <-  sub("<.+", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- as.numeric(sub("\\s.*", "", p2))
deathdate <- as.numeric(sub("\\d+\\s+\\\n\\s+-\\s+", "", p2))
pgdf <- data.frame(surname, firstname, birthdate, deathdate)
firstname
pagelist <- paste0("https://musicalics.com/en/composers_alphabet?page=", 1:143)
pagelist <- c("https://musicalics.com/en/composers_alphabet", paste0("https://musicalics.com/en/composers_alphabet?page=", 1:143))
pagelist[5]
View(pgdf)
compdf <- data.frame(surname= character(), firstname=character(), birthdate=numeric(), deathdate=numeric())
pagelist <- c("https://musicalics.com/en/composers_alphabet", paste0("https://musicalics.com/en/composers_alphabet?page=", 1:143))
compdf <- data.frame(surname= character(), firstname=character(), birthdate=numeric(), deathdate=numeric())
for (i in pagelist){
p <- i %>%
read_html() %>%
html_nodes(xpath="/html/body/div[1]/div[2]/div/section/div[3]/div/div/div/div/div[3]") %>%
html_text()
p2 <-strsplit(p,")")[[1]]
p2 <-   sub("^[\\\n ]+", "", p2)
surname <- sub("<.*", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*", "", p2)
firstname <-  sub("<.+", "", sub("\\s+\\\n.+", "", p2))
p2 <- sub("^\\w+\\s\\w*\\s*\\(", "", p2)
birthdate <- as.numeric(sub("\\s.*", "", p2))
deathdate <- as.numeric(sub("\\d+\\s+\\\n\\s+-\\s+", "", p2))
pgdf <- data.frame(surname, firstname, birthdate, deathdate)
compdf <- rbind(compdf, pgdf)
}
View(compdf)
works <- read.csv("works.csv")
compcount <- works %>%
group_by(composerName) %>%
summarise(count=n())
library(jsonlite)
library(stringr)
library(XML)
library(RCurl)
library(filesstrings)
library(ggplot2)
library(ggrepel)
library(tidyr)
library(rvest)
library(dplyr)
works <- read.csv("works.csv")
compcount <- works %>%
group_by(composerName) %>%
summarise(count=n())
ggplot(compcount, aes(x=count))+
geom_histogram()+
scale_x_log10()
composers <- as.character(works$composerName)
composers_nondup <- composers[duplicated(composers) == FALSE]
composers_firstname <- gsub(".*, *", "", composers_nondup)
composers_surname <- gsub(", .*", "", composers_nondup)
composers_name <- paste(composers_firstname, composers_surname)
nycompdf <- data.frame(firstsur= composers_name, surfirst= composers_nondup, sur= composers_surname)
View(nycompdf)
nycompdf$sur %in% compdf$surname
x <- nycompdf$sur %in% compdf$surname
x
nycompdf$sur
save.image("~/nyc-phil/d.RData")
